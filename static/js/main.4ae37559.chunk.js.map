{"version":3,"sources":["components/landingpage.js","components/contact.js","components/tile.js","components/projects.js","components/resume.js","components/main.js","App.js","serviceWorker.js","index.js","assets/headshot.jpg"],"names":["Landing","style","width","margin","className","col","src","headshot","alt","class","href","target","rel","color","Component","Contact","Tile","this","props","title","blurb","js","fontSize","react","link","Projects","id","map","item","Resume","Main","exact","path","component","LandingPage","App","scroll","to","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.4ae37559.chunk.js","sourcesContent":["import React, {Component } from 'react';\nimport {Grid, Cell} from 'react-mdl';\nimport headshot from '../assets/headshot.jpg';\n\nclass Landing extends Component {\n  render() {\n    return(\n      <div style={{width: '100%', margin: 'auto'}}>\n        <Grid className=\"landing-grid\">\n          <Cell col={12}>\n            <h1>Daniel Gawne</h1>\n            <img src={headshot} alt=\"headshot\" className=\"avatar-img\"/>\n            <div className=\"banner-text banner-blue\">\n              <h3>Front End Web Developer</h3>\n              <hr />\n              <p>HTML/CSS  /  Javascript  /  ReactJS  /  Graphic Design</p>\n              <div class=\"social-links\">\n                <a href=\"https://www.linkedin.com/in/dgwne/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <i className=\"fab fa-linkedin-square\"  style={{color: '#0077B5'}}/>\n                </a>\n                <a href=\"https://github.com/dgwn\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <i className=\"fab fa-github-square\"  style={{color: '#6e5494'}}/>\n                </a>\n                <a href=\"https://www.freecodecamp.org/dgwn\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <i className=\"fab fa-free-code-camp\"  style={{color: '#00471b'}}/>\n                </a>\n              </div>\n            </div>\n            <div class=\"banner-text banner-yellow\">\n              <h3>About Me</h3>\n              <p>I am a fresh web developer focusing on the front-end. I graduated from the University of Central Florida with a B.A. in Philosophy and a minor in Sociology.</p>\n              <p>I am especially interested in the role technology plays in changing social structures, such as culture, politics, and the workplace. I hope to use my toolkit to work with small businesses and nonprofits so that they better meet their goals through developing an online presence and addressing application needs.</p>\n            </div>\n          </Cell>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default Landing;\n","import React, {Component } from 'react';\n\nclass Contact extends Component {\n  render() {\n    return(\n      <div>\n        <h1>Under Construction</h1>\n\n\n      </div>\n    )\n  }\n}\n\nexport default Contact;\n","import React, {Component } from 'react';\n\nclass Tile extends Component {\n  render() {\n    return(\n    <div className=\"tile\">\n      <h4>{this.props.title}</h4>\n      <p>{this.props.blurb}</p>\n      <div>\n        <p>Technologies Used:</p>\n        {this.props.js && <i class=\"fab fa-js\" style={{fontSize: 30}}></i>}\n        {this.props.react && <i class=\"fab fa-react\" style={{fontSize: 30}}></i>}\n      </div>\n      <a href={this.props.link}>Click Here!</a>\n    </div>\n  )\n  }\n}\n\nexport default Tile;\n","import React, {Component } from 'react';\nimport Tile from './tile';\n\nclass Projects extends Component {\n  render() {\n    const PROJECTS = [\n      {\n        id: 1,\n        title: \"Drum Machine\",\n        blurb: \"Multiple configurations of pads which trigger different audio samples\",\n        link: \"#\",\n        js: false,\n        react: true\n      },\n      {\n        id: 2,\n        title: \"Etch Sketch\",\n        blurb: \"Webpage with interactive cursor drawing\",\n        link: \"https://github.com/dgwn/etch-sketch\",\n        js: true,\n        react: false\n      }\n    ]\n\n    return(\n      <div class=\"tile-container\">\n\n      {PROJECTS.map(function(item){\n        return (<Tile title={item.title}\n                      blurb={item.blurb}\n                      link={item.link}\n                      js={item.js}\n                      react={item.react}/>)\n\n      })}\n\n\n      </div>\n    )\n  }\n}\n\nexport default Projects;\n","import React, {Component } from 'react';\n\nclass Resume extends Component {\n  render() {\n    return(\n      <div>\n        <h1>Under Construction</h1>\n      </div>\n    )\n  }\n}\n\nexport default Resume;\n","import React from 'react';\nimport LandingPage from './landingpage';\nimport Contact from './contact';\nimport Projects from './projects';\nimport Resume from './resume';\nimport {Switch, Route} from 'react-router-dom';\n\n\n\nconst Main = () => (\n  <Switch>\n    <Route exact path =\"/\" component={LandingPage} />\n    <Route path =\"/contact\" component={Contact} />\n    <Route path =\"/projects\" component={Projects} />\n    <Route path =\"/resume\" component={Resume} />\n  </Switch>\n)\n\nexport default Main;\n","import React from 'react';\nimport {Layout, Header, Navigation, Drawer, Content} from 'react-mdl';\nimport Main from './components/main';\nimport {Link} from 'react-router-dom';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"demo-big-content\">\n        <Layout>\n            <Header title=\" \" class=\"header-color\" scroll>\n                <Navigation>\n                    <Link to=\"/\" style={{color: \"black\"}}>Home</Link>\n                    <Link to=\"/resume\" style={{color: \"black\"}}>Resume</Link>\n                    <Link to=\"/projects\" style={{color: \"black\"}}>Projects</Link>\n                    <Link to=\"/contact\" style={{color: \"black\"}}>Contact</Link>\n                </Navigation>\n            </Header>\n            <Drawer title=\"Menu\" style={{color: \"black\"}}>\n                <Navigation>\n                  <Link to=\"/\">Home</Link>\n                  <Link to=\"/resume\">Resume</Link>\n                  <Link to=\"/projects\">Projects</Link>\n                  <Link to=\"/contact\">Contact</Link>\n                </Navigation>\n            </Drawer>\n            <Content>\n                <div className=\"page-content\" />\n                <Main />\n            </Content>\n            <p class=\"copyright\">&copy; 2019 Daniel Gawne | Built with React</p>\n        </Layout>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/headshot.c933ccb8.jpg\";"],"sourceRoot":""}